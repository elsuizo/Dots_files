# My snippets for arduino
# 1. Nice coments
#-------------------------------------------------------------------------
#                                Coments
#-------------------------------------------------------------------------
snippet COM
   /* ${0:your nice comment here} */

snippet BCOM
   /*-------------------------------------------------------------------------
   *                        ${0:yor nice comment here}
   -------------------------------------------------------------------------*/

snippet HEADER
   //-------------------------------------------------------------------------
   // @file `expand("%:t")`
   //
   // @date `strftime("%Y-%m-%d")`
   // @author Martin Noblia
   // @email mnoblia@disroot.org
   //
   // @brief
   //
   // @detail
   //
   // Licence:
   // This program is free software: you can redistribute it and/or modify
   // it under the terms of the GNU General Public License as published by
   // the Free Software Foundation, either version 3 of the License, or (at
   // your option) any later version.
   //
   // This program is distributed in the hope that it will be useful, but
   // WITHOUT ANY WARRANTY; without even the implied warranty of
   // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   // General Public License for more details.
   //
   // You should have received a copy of the GNU General Public License
   //---------------------------------------------------------------------------
   ${0:your code here}

snippet MIT
   //----------------------------------------------------------------------------
   // @file `expand("%:t")`
   //
   // @date `strftime("%Y-%m-%d")`
   // @author Martin Noblia
   // @email mnoblia@disroot.org
   //
   // @brief
   //
   // @detail
   //
   // Licence MIT:
   // Copyright <`strftime("%Y")`> <Martin Noblia>
   //
   // Permission is hereby granted, free of charge, to any person obtaining a copy
   // of this software and associated documentation files (the "Software"), to deal
   // in the Software without restriction, including without limitation the rights
   // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   // copies of the Software, and to permit persons to whom the Software is
   // furnished to do so, subject to the following conditions:
   //
   // The above copyright notice and this permission notice shall be included in
   // all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED
   // "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
   // LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
   // PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
   // HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
   // ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   //----------------------------------------------------------------------------
   ${0:your code here}

snippet HEADER_TODO
   //----------------------------------------------------------------------------
   // @date `strftime("%Y-%m-%d")`
   // @author Martin Noblia
   // TODOs
   // - [ ] ${0:your todo here}
   //----------------------------------------------------------------------------

#-------------------------------------------------------------------------
#                                auxiliaries
#-------------------------------------------------------------------------
snippet TODO
   /* TODO(`$USER`:`strftime("%Y-%m-%d")`): ${1:your todo task here} */

snippet FIXME
   /* FIXME(`$USER`:`strftime("%Y-%m-%d")`): ${1:your fix task here} */

snippet NOTE
   /* NOTE(`$USER`:`strftime("%Y-%m-%d")`): ${1:your note here} */

snippet     if
options     head
abbr        if () {}
    if (${1:#:condition}) {
        ${0:TARGET}
    }

snippet else
options     head
    else {
        ${0:TARGET}
    }

snippet elseif
options     head
    else if (${1:#:condition}) {
        ${0:TARGET}
    }

snippet     ifelse
options     head
abbr        if () {} else {}
    if (${1:#:condition}) {
        ${2:TARGET}
    } else {
        ${3}
    }

snippet     for
options     head
abbr        for () {}
    for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {
        ${0:#:TARGET}
    }

snippet     while
options     head
abbr        while () {}
    while (${1:#:condition}) {
        ${0:TARGET}
    }

snippet     do_while
options     head
alias       do
    do {
        ${0:TARGET:code}
    } while (${1:#:condition});

snippet     switch
options     head
abbr        switch () {}
    switch (${1:#:var}) {
        case ${2:#:val}:
            ${0:TARGET}
            break;
    }

snippet     function
options     head
alias       func
abbr        func() {}
    ${1:void} ${2:#:func_name}(${3:#:args}) {
        ${0:TARGET}
    }

snippet     struct
options     head
abbr        struct {}
    struct ${1:#:name} {
        ${0:TARGET:data}
    };

# Typedef struct
snippet struct_typedef
options     head
    typedef struct ${1:#:name} {
        ${0:TARGET:data}
    };

snippet     enum
options     head
abbr        enum {}
    enum ${1:#:name} {
        ${0:TARGET}
    };

# hard-tab is necessary; C indent doesn't support this.
snippet main
options     head
	int main(int argc, char const* argv[])
	{
		${0:TARGET}
		return 0;
	}

# #include <...>
snippet inc
options     head
alias   #inc, #include
    #include <${1:stdio}.h>${0}
# #include "..."
snippet inc2
options     head
alias   #inc2, #include2
    #include "${1}.h"${0}

snippet ifndef
options     head
alias   #ifndef
abbr #ifndef ... #define ... #endif
    #ifndef $1
    #define ${1:#:SYMBOL}
    #endif${0}

snippet def
options     head
alias   #def, #define
    #define

# Include-Guard
snippet once
options     head
abbr include-guard
    #ifndef ${1:SYMBOL}
        #define $1

        ${0:TARGET}
    #endif /* end of include guard */

# Ternary conditional operator
snippet conditional
    (${1:#:condition}) ? ${2:#:a} : ${3:#:b}

snippet typedef
    typedef ${1:#:base_type} ${2:#:custom_type};

snippet printf
abbr    printf("...\n", ...);
    printf("${1}\n", ${2});

snippet fprintf
abbr    fprintf(..., "...\n", ...);
    fprintf(${1:stderr}, "${2}\n"${3});

snippet comment
alias /*
    /* ${1:#:comment} */
    ${0}

snippet sizeof
alias size
    sizeof(${0:TARGET})

snippet helloworld
options     head
    #include <stdio.h>
    int main(int argc, char const* argv[])
    {
        puts("hello, world!");
        return 0;
    }

snippet fopen
abbr fopen("...", "...");
    fopen("${1:PATH}", "${2:MODE}");
    ${0:TARGET}
    fclose(${3:FD});

snippet fgets
abbr fgets(row, length, file);
    fgets(${0:ROW}, ${1:LENGTH}, ${2:FILE});

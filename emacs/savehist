;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-number-history org-tags-history org-link--history empty-history woman-topic-history org-read-date-history yes-or-no-p-history minibuffer-history tmphist buffer-name-history extended-command-history evil-ex-history file-name-history))
(setq org-read-date-history '("   "))
(setq yes-or-no-p-history '("yes" "no" ":yes" "y"))
(setq minibuffer-history '("use-package-statistics" "badwolf-theme" "solarized-dark-high-contrast" "gruvbox-theme" "almost-mono-themes" "pagina de los creadores" "link a definicion" "link al doc" "/usr/bin/zsh" "company-racer" "ample" "solarized" "molokai" "paganini" "monochrome" "sensores sick" "solarized-dark" "ample-light" "ample-flat" "ample-theme" "zenburn" "zenburn-theme" "darktooth" "darktooth-theme" "dichromacy" "doom-themes" "dracula" "dracula-theme" "tao-yin" "tao-yang" "gruber-darker" "gruber-darker-theme" "planet" "planet-theme" "monochrome-theme" "molokai-theme" "minimal" "minimal-theme" "greymatters" "greymatters-theme" "firebelly" "firebelly-theme" "busybee" "busybee-theme" "boron" "boron-theme" "resultado" "PlantUML" "graphviz" "tabla con dias y horarios" "lista de tareas pendientes personales" "Lista de tareas pendientes de IACI" "Lista de tareas diarias" "lista de telefonos" "datos personales" "lista de mails" "algunos datos personales" "link" "org-bullets" "tao-theme" "paganini-theme" "cyberpunk" "tango" "tsdh-dark" "leuven" "misterioso" "solarized-light" "default" "wombat" "Proyecto Maquina" "formato de links en org-mode" "leyendo un csv en C" "respuesta de StackOverflow"))
(setq buffer-name-history '("Personal_org_mode_files" "TODO.org" "config.org" "dia_a_dia.org" "personal_tasks.org" "arrays_test.hs" "init.el" "main.rs" "*GNU Emacs*" "proyecto_maquina.org" "read_CSV.c" "resumen_Free_OSEK.org" "ejemplo_uso_recursos_en_interrupciones.oil" "init.vim" "*scratch*" "mails.org" "dia_dia_todos.org"))
(setq extended-command-history '("all-the-icons-install-fonts" "server-force-delete" "package-install" "load-theme" "recover-session" "rust-run" "term" "package-list-packages" "toggle-truncate-lines" "package-menu-mark-upgrades" "comment-box" "comment-region" "uncomment-region" "org-update-statistics-cookies" "what-line_only_number" "what-line" "org-store-link" "artist-mode" "what-cursor-position"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("e ~/.emacs.d/config.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23)) #("e ~/Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59)) #("e resumen_programming_rust_nuevo_cap20-async.md" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47)) #("cd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e Dropbox/Org_mode_files/Personal_org_mode_files/lalala.txt.gpg" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59) 59 60 (ex-index 60) 60 61 (ex-index 61) 61 62 (ex-index 62) 62 63 (ex-index 63)) #("e ~/.emacs.d/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("e src/lib.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("cd Repos" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("e Zig/remember_zig.md" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("cd ~/Repos" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("color-theme-select" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("buffer" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("on" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e ~/Repos/tensortrade/tensortrade/feed/core/base.py" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51)) #("e ~/Repos/Remember/Org-mode/remember_org_mode.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49)) #("e Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57)) #("! cd Repos/A-star-algorithm-rust/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33)) #("e src/transformations.jl" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("cd Repos/Robotics" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("e .emacs.d/config.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("vsplit term" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("e arrays_test.hs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16)) #("term" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e bang_bang.hs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("e src/main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("cargo-process-run" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("se nowrap" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("e src/matrix4x4.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("cd ~/Dev" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("sl;dkfjasdlk" 0 1 (ex-index 1 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 1 2 (ex-index 2 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 2 3 (ex-index 3 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 3 4 (ex-index 4 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 4 5 (ex-index 5 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 5 6 (ex-index 6 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 6 7 (ex-index 7 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 7 8 (ex-index 8 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 8 9 (ex-index 9 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 9 10 (ex-index 10 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 10 11 (ex-index 11 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt))) 11 12 (ex-index 12 line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)))) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq file-name-history '("~/Repos/Rust_work/" "~/.cache/.fr-ZZVX41/a3/src/block_tests.rs" "~/.cache/.fr-SATG51/a3/src/main.rs" "~/Cosas/polkadot-count1.md" "~/Cosas/lalala" "~/Cosas/books_maybe/gridworld4x4.lisp" "~/Dropbox/ideas_projets.org" "~/Downloads/ipfs_nodes.csv" "~/Dropbox/Org_mode_files/Personal_org_mode_files/" "~/.emacs.d/config.org" "~/.cache/.fr-W9QX21/sum_happy_numbers.txt" "~/Dev/Exercism/rust/pythagorean-triplet/" "~/Repos/Remember/" "~/Repos/" "~/Repos/Remember/Zig/" "~/programming" "~/Dropbox/main.rs" "~/Dropbox/main_passport.rs" "~/Downloads/planningrace.py" "~/Downloads/MpGbYlZa" "~/Cosas/test.txt" "~/Downloads/parachain.md" "~/ipfs_nodes[0][addr][value].tsv" "~/ipfs_nodes.csv" "~/my_csv.csv" "~/.cache/.fr-FFEFVX/xp-pen-pentablet-3.2.3.220323-1.x86_64/install.sh" "~/Repos/DAISIM-Rust/simulation-output/CDPRate(0.02)TXF(0.05)RUN(0).txt" "~/Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" "~/Repos/A-star-algorithm-rust/" "~/Repos/Robotics/" "~/Dev/Haskell_play/arrays_test.hs" "~/Dropbox/TODO_12_08.org" "~/Dev/Haskell_play/" "~/.emacs.d/init.el" "~/.emacs.d/custom.el" "~/Repos/retina/src/lib.rs" "~/Repos/Haskell_work/" "~/Repos/Remember/Haskell/remember_haskell.org" "~/Repos/darknet/" "~/Repos/huffman-rs/" "~/Repos/huffman-rs/src/main.rs" "~/Repos/robotics-zero/" "~/Repos/robotics-zero" "~/Repos/robotics-zero/src/lib.rs" "~/Dev/Rust_play/image-processing-test/src/" "~/Dev/Rust_play/image-processing-test/src/main.rs" "~/Dev" "~/Repos/Rust_work/mandelbrot-set/src/main.rs" "~/Dev/Rust_play/array_test/src/main.rs" "~/Dev/Rust_play/array_test/" "~/Dropbox/Org_mode_files/Personal_org_mode_files/lalala.txt.gpg" "~/Dropbox/Proyectos/Proyecto_Maquina/Presupuesto/sensores_a_utilizar.csv" "~/C_work/read_CSV.c" "~/Dropbox/Proyectos/Proyecto_Maquina/Embedded/Tasks/Tasks_diagram_generation/states.txt" "~/Dropbox/Org_mode_files/Programacion_org_mode_files/Python/ejemplo_de_tablas_panda.org" "~/Dropbox/TODO.org" "~/.config/nvim/init.vim" "~/.emacs.d/config.p" "~/C_work/factorial.c" "~/C_work/simple_compressor_RLE.c"))
(setq kill-ring '(#("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("** 
    #+begin_src emacs-lisp
    (setq custom-file (expand-file-name \"custom.el\" user-emacs-directory))
    (load custom-file)
    (setq byte-compile-warnings '(cl-functions))
    #+end_src
" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t yank-handler (evil-yank-line-handler nil t)) 4 30 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 30 31 (face org-block-begin-line font-lock-multiline t help-echo nil fontified t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 31 36 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 36 40 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 40 71 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 71 82 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 82 134 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 134 138 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 138 178 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 178 191 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 191 192 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("config read" 0 11 (fontified t face org-level-2)) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler nil t))) #("** config read
    #+begin_src emacs-lisp
    (setq custom-file (expand-file-name \"custom.el\" user-emacs-directory))
    (load custom-file)
    (setq byte-compile-warnings '(cl-functions))
    #+end_src

" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 14 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (fontified t yank-handler (evil-yank-line-handler nil t)) 15 41 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 41 42 (help-echo nil face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 42 47 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 47 51 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 51 82 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 82 93 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 93 145 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 145 149 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 149 189 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 189 202 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 202 203 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t)) 203 204 (fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("** 
" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) "use-package all-the-icons)
" #("      (setq inhibit-startup-message t)
" 0 7 (help-echo nil face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 7 11 (help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t)) 11 39 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t yank-handler (evil-yank-line-handler nil t))) #("    #+begin_src emacs-lisp
      (setq inhibit-startup-message t)
    #+end_src
" 0 26 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 26 27 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 27 34 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 34 38 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 38 66 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 66 71 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 71 79 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 79 80 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("Setup el rust-mode
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t) 1 19 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("* Rust
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-1) 2 6 (yank-handler (evil-yank-line-handler nil t) fontified t face org-level-1) 6 7 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("wombat" 0 6 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) #("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil)) #("    (load-theme 'wombat t)
" 0 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 4 27 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("    #+end_src
" 0 13 (face org-meta-line font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (fontified t yank-handler (evil-yank-line-handler nil t))) #("** Disable visual bell
    #+begin_src emacs-lisp
      (setq visible-bell nil)
" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 22 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (fontified t yank-handler (evil-yank-line-handler nil t)) 23 49 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 49 50 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 50 57 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 57 61 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 61 80 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) #("inhibit-startup-message" 0 6 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 6 7 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t) 7 23 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t)) #("inhibi" 0 6 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) #("inhibit" 0 7 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) #("    #+begin_src emacs-lisp
      (setq inhibit-startup-message t)
    #+end_src
" 0 26 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 26 27 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 27 34 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34 38 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 38 66 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 66 79 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 79 80 (yank-handler (evil-yank-line-handler nil t) fontified t face org-block-end-line)) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("setup" 0 5 (fontified t face org-level-2)) #("** setup
" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 8 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t))) #("#+begin_src emacs-lisp
(setq gc-cons-threshold 800000)
(require 'evil-leader)
(global-evil-leader-mode)
(evil-leader/set-leader \",\")
(evil-leader/set-key
  \"b\" 'switch-to-buffer
  \"w\" 'save-buffer
  \"c\" 'cargo-process-build
  \"t\" 'term)
(setq package-list '(evil-leader))
#+end_src
" 0 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 23 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 24 25 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 25 28 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 28 56 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 56 63 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 63 65 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 65 76 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 76 128 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 128 131 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 131 156 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 156 159 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 159 180 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 180 183 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 183 199 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 199 202 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 202 226 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 226 229 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 229 238 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 238 242 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 242 272 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 272 281 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 281 282 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("** setup
" 0 1 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-2 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 3 8 (face org-level-2 fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t))) #("#+begin_src emacs-lisp
(setq gc-cons-threshold 800000)
(require 'evil-leader)
(global-evil-leader-mode)
(evil-leader/set-leader \",\")
(evil-leader/set-key
  \"b\" 'switch-to-buffer
  \"w\" 'save-buffer
  \"c\" 'cargo-process-build
  \"t\" 'term)
(setq package-list '(evil-leader))
#+end_src
" 0 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 23 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 24 25 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 25 28 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 28 56 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 56 63 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 63 65 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 65 76 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 76 128 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 128 131 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 131 156 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 156 159 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 159 180 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 180 183 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 183 199 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 199 202 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 202 226 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 226 229 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 229 238 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 238 242 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 242 272 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 272 281 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 281 282 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler nil t))) #("    #+end_src
" 0 4 (yank-handler (evil-yank-line-handler nil t) font-lock-fontified t src-block t fontified t font-lock-multiline t face org-block-end-line) 4 13 (yank-handler (evil-yank-line-handler nil t) font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t face org-block-end-line)) #("    #+begin_src emacs-lisp
" 0 4 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 4 26 (yank-handler (evil-yank-line-handler nil t) font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 26 27 (yank-handler (evil-yank-line-handler nil t) font-lock-fontified t fontified t help-echo nil font-lock-multiline t face org-block-begin-line)) #("Font setup" 0 10 (face org-level-2 fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #("** Font setup
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t face org-hide keymap (keymap)) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-2) 3 13 (yank-handler (evil-yank-line-handler nil t) fontified t face org-level-2) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #("Comienza la fiesta!!!
" 0 21 (yank-handler (evil-yank-line-handler nil t) fontified t) 21 22 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #("config read" 0 11 (face org-level-2 fontified t)) #("** config read
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t face org-hide keymap (keymap)) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-2) 3 14 (yank-handler (evil-yank-line-handler nil t) fontified t face org-level-2) 14 15 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("Font setup" 0 10 (face org-level-2 fontified t)) #("** Font setup
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t face org-hide keymap (keymap)) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-2) 3 13 (yank-handler (evil-yank-line-handler nil t) fontified t face org-level-2) 13 14 (yank-handler (evil-yank-line-handler nil t) fontified t rear-nonsticky t)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("* 
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-1) 2 3 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("#+begin_src emacs-lisp
(setq gc-cons-threshold 400000000)
;(set-frame-font \"mononoki  Nerd Font Mono 15\")
(set-frame-font \"JetBrainsMono Nerd Font 15\")
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(column-number-mode)
(show-paren-mode)
#+end_src
" 0 22 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 23 24 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 28 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 28 58 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 58 59 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 59 106 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 106 122 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 122 150 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 150 250 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 250 259 (yank-handler (evil-yank-line-handler nil t) fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 259 260 (yank-handler (evil-yank-line-handler nil t) fontified t face org-block-end-line)) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t) fontified t)) #("Libro zero2hero(desde cero de vuelta)" 0 37 (fontified t face org-level-3)) #("*** 
" 0 2 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (face org-level-3 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t yank-handler (evil-yank-line-handler nil t))) #("*** TODO Libro zero2hero(desde cero de vuelta)
" 0 2 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (face org-level-3 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 4 8 (face (org-todo org-level-3) fontified t yank-handler (evil-yank-line-handler nil t)) 8 46 (face org-level-3 fontified t yank-handler (evil-yank-line-handler nil t)) 46 47 (fontified t yank-handler (evil-yank-line-handler nil t))) #("Learn Zig" 0 9 (org-todo-head "TODO" fontified t face org-level-3)) #("*** TODO Learn Zig
" 0 2 (keymap (keymap) face org-hide org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (face org-level-3 keymap (keymap) org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler nil t)) 4 8 (face (org-todo org-level-3) org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler nil t)) 8 18 (face org-level-3 org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler nil t)) 18 19 (fontified t yank-handler (evil-yank-line-handler nil t))) #("*** 
" 0 2 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (face org-level-3 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t yank-handler (evil-yank-line-handler nil t))) #("*** 
" 0 2 (keymap (keymap) face org-hide fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (face org-level-3 keymap (keymap) fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (fontified t yank-handler (evil-yank-line-handler nil t))) #("mononoki  Nerd Font Mono 15" 0 27 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) "JetBrainsMono Nerd Font" #("(set-frame-font \"mononoki  Nerd Font Mono 15\")
" 0 16 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 16 45 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t)) 45 47 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler nil t))) #("(orientados a conseguir trabajo)" 0 32 (fontified t face org-level-2)) #("**** TODO tiene que ser
" 0 3 (yank-handler (evil-yank-line-handler nil t) fontified t face org-hide keymap (keymap)) 3 4 (yank-handler (evil-yank-line-handler nil t) fontified t composition (3 1 [10047]) keymap (keymap) face org-level-4) 4 5 (yank-handler (evil-yank-line-handler nil t) fontified t keymap (keymap) face org-level-4) 5 9 (yank-handler (evil-yank-line-handler nil t) org-todo-head "TODO" fontified t face (org-todo org-level-4)) 9 23 (yank-handler (evil-yank-line-handler nil t) org-todo-head "TODO" fontified t face org-level-4) 23 24 (yank-handler (evil-yank-line-handler nil t) fontified t))))
(setq search-ring '("julia-mode" "haskell-mode" "julia" "nerdtree" "evil" "racer" "rust-mode" "blackbo" "virtualenvw"))
(setq regexp-search-ring '(#("icons" 0 5 (isearch-case-fold-search t)) #("color" 0 5 (isearch-case-fold-search t)) #("visible" 0 7 (isearch-case-fold-search t)) #("theme" 0 5 (isearch-case-fold-search t)) #("San" 0 3 (isearch-case-fold-search nil)) #("colortheme" 0 10 (isearch-case-fold-search t)) #("colo" 0 4 (isearch-case-fold-search t)) #("sola" 0 4 (isearch-case-fold-search t)) #("sol" 0 3 (isearch-case-fold-search t)) #("almos" 0 5 (isearch-case-fold-search t)) #("evil-mode" 0 9 (isearch-case-fold-search t)) #("evil" 0 4 (isearch-case-fold-search t)) #("superpixels" 0 11 (isearch-case-fold-search t)) #("Super" 0 5 (isearch-case-fold-search nil)) #("SLIC" 0 4 (isearch-case-fold-search nil)) #("\\<DataFeed\\>" 0 12 (isearch-case-fold-search nil))))
